apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: 04-build-and-deploy-pipeline
  namespace: tekton-pipelines
spec:
  workspaces:
    - name: git-source
      description: The git repo
  params:
    - name: gitUrl
      description: Git repository url
    - name: gitRevision
      description: Git revision to check out
      default: deploy
    - name: pathToContext
      description: The path to the build context, used by Kaniko - within the workspace
      default: src
    - name: pathToYamlFile
      description: The path to the yaml file to deploy within the git source
    - name: imageUrl
      description: Image name including repository
    - name: imageTag
      description: Image tag
      default: "latest"
    - name: dockerFile
      description: Specific dockerfile location
      default: "./Dockerfile"
    - name: gitTargetDir
      description: Specific git clone location
      default: ""
    - name: context
      description: location root dir project for build image
      default: "./"
  tasks:
    - name: clone-repo
      when:
        - input: "$(params.gitRevision)"
          operator: in
          values: [ "deploy" ]
      taskRef:
        name: 01-git-clone
      workspaces:
        - name: output
          workspace: git-source
        - name: ssh-directory
          workspace: git-source
      params:
        - name: verbose
          value: "true"
        - name: url
          value: "$(params.gitUrl)"
        - name: revision
          value: "$(params.gitRevision)"
        - name: subdirectory
          value: "$(params.gitTargetDir)"
        - name: deleteExisting
          value: "true"
        - name: gitInitImage
          value: "gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:latest"
    - name: source-to-image
      when:
        - input: "$(params.gitRevision)"
          operator: in
          values: [ "deploy" ]
      taskRef:
        name: 02-build-and-push-image-using-kaniko
      runAfter:
        - clone-repo
      workspaces:
        - name: source
          workspace: git-source
      params:
        - name: DOCKERFILE
          value: $(params.dockerFile)
        - name: CONTEXT
          value: $(params.context)
        - name: IMAGE
          value: $(params.imageUrl):$(params.imageTag)
    - name: deploy-to-cluster
      when:
        - input: "$(params.gitRevision)"
          operator: in
          values: [ "deploy" ]
      taskRef:
        name: 03-deploy-using-kubectl
      workspaces:
        - name: git-source
          workspace: git-source
      params:
        - name: pathToYamlFile
          value: $(params.pathToYamlFile)
        - name: imageUrl
          value: $(params.imageUrl)
        - name: imageTag
          value: $(params.imageTag)
        - name: imageDigest
          value: $(tasks.source-to-image.results.IMAGE-DIGEST)
        - name: deploymentName
          value: $(params.context)-deployment